version: "3.8"
services:

  guild:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.region == ru"  # Запускаем только на RU сервере
    image: registry.sh1bari.ru/hack/guildservice:1.0.0
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_ADDRESS=guild-db
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - KAFKA_ENABLED=false
    depends_on:
      - guildpostgres
    networks:
      - my-custom-network

  guildpostgres:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.region == ru"
    image: mirror.gcr.io/postgres:16.4-alpine
    networks:
      - my-custom-network
    restart: always
    environment:
      - POSTGRES_DB=guild-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pg-data-guild:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5435:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_DATA_DIR: /var/lib/zookeeper/data
      ZOOKEEPER_DATALOG_DIR: /var/lib/zookeeper/datalog
    ports:
      - 22181:2181
    restart: always
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - my-custom-network


  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    command: [ "sh", "-c", "sleep 10 && /etc/confluent/docker/run" ]
    ports:
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://31.128.46.246:29092,PLAINTEXT_HOST://31.128.46.246:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_SEGMENT_BYTES: 104857600
      KAFKA_LOG_RETENTION_MS: 604800000
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_TRANSACTION_TIMEOUT_MS: 60000
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    restart: always
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - my-custom-network

volumes:
  pg-data-guild:
    driver: local
  kafka-data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local

networks:
  traefik_network:
    external: true
  my-custom-network:
    external: true