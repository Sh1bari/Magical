version: "3.8"
services:

  guildpostgres:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.region == ru"
    image: mirror.gcr.io/postgres:16.4-alpine
    networks:
      - my-custom-network
    restart: always
    environment:
      - POSTGRES_DB=guild-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pg-data-guild:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5435:5432"

  zookeeper:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.region == ru"
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    networks:
      - my-custom-network

  kafka:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.region == ru"
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-custom-network

volumes:
  pg-data-guild:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local

networks:
  traefik_network:
    external: true
  my-custom-network:
    external: true